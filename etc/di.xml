<?xml version="1.0"?>
<!--
  ~ @author Monei Team
  ~ @copyright Copyright Â© Monei (https://monei.com)
  -->
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <preference for="Monei\MoneiPayment\Api\Config\MoneiPaymentModuleConfigInterface"
                type="Monei\MoneiPayment\Model\Config\MoneiPaymentModuleConfig"/>
    <preference for="Monei\MoneiPayment\Api\Config\MoneiCardPaymentModuleConfigInterface"
                type="Monei\MoneiPayment\Model\Config\MoneiCardPaymentModuleConfig"/>
    <preference for="Monei\MoneiPayment\Api\Config\MoneiBizumPaymentModuleConfigInterface"
                type="Monei\MoneiPayment\Model\Config\MoneiBizumPaymentModuleConfig"/>
    <preference for="Monei\MoneiPayment\Api\Config\MoneiGoogleApplePaymentModuleConfigInterface"
                type="Monei\MoneiPayment\Model\Config\MoneiGoogleApplePaymentModuleConfig"/>
    <preference for="Monei\MoneiPayment\Api\Service\CreatePaymentInterface"
                type="Monei\MoneiPayment\Service\CreatePayment"/>
    <preference for="Monei\MoneiPayment\Api\Service\Checkout\CreateLoggedMoneiPaymentInSiteInterface"
                type="Monei\MoneiPayment\Service\Checkout\CreateLoggedMoneiPaymentInSite"/>
    <preference for="Monei\MoneiPayment\Api\Service\Checkout\CreateLoggedMoneiPaymentVaultInterface"
                type="Monei\MoneiPayment\Service\Checkout\CreateLoggedMoneiPaymentVault"/>
    <preference for="Monei\MoneiPayment\Api\Service\Checkout\CreateGuestMoneiPaymentInSiteInterface"
                type="Monei\MoneiPayment\Service\Checkout\CreateGuestMoneiPaymentInSite"/>
    <preference for="Monei\MoneiPayment\Api\Service\Checkout\SaveTokenizationInterface"
                type="Monei\MoneiPayment\Service\Checkout\SaveTokenization"/>
    <preference for="Monei\MoneiPayment\Api\Service\GetPaymentInterface" type="Monei\MoneiPayment\Service\GetPayment"/>
    <preference for="Monei\MoneiPayment\Api\Service\CancelPaymentInterface"
                type="Monei\MoneiPayment\Service\CancelPayment"/>
    <preference for="Monei\MoneiPayment\Api\Service\RefundPaymentInterface"
                type="Monei\MoneiPayment\Service\RefundPayment"/>
    <preference for="Monei\MoneiPayment\Api\Service\CapturePaymentInterface"
                type="Monei\MoneiPayment\Service\CapturePayment"/>
    <preference for="Monei\MoneiPayment\Api\Service\GenerateInvoiceInterface"
                type="Monei\MoneiPayment\Service\GenerateInvoice"/>
    <preference for="Monei\MoneiPayment\Api\Service\SetOrderStatusAndStateInterface"
                type="Monei\MoneiPayment\Service\SetOrderStatusAndState"/>
    <preference for="Magento\Sales\Controller\Adminhtml\Order\Creditmemo\Save"
                type="Monei\MoneiPayment\Controller\Adminhtml\Order\Creditmemo\Save"/>
    <preference for="Monei\MoneiPayment\Api\OrderLockManagerInterface"
                type="Monei\MoneiPayment\Model\OrderLockManager"/>

    <type name="Monei\MoneiPayment\Service\Logger\Handler">
        <arguments>
            <argument name="filesystem" xsi:type="object">Magento\Framework\Filesystem\Driver\File</argument>
        </arguments>
    </type>
    <type name="Monei\MoneiPayment\Service\Logger">
        <arguments>
            <argument name="name" xsi:type="string">moneiLogger</argument>
            <argument name="handlers" xsi:type="array">
                <item name="system" xsi:type="object">Monei\MoneiPayment\Service\Logger\Handler</item>
            </argument>
        </arguments>
    </type>
    <type name="Magento\Framework\Console\CommandList">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="moneiCreatePayment" xsi:type="object">Monei\MoneiPayment\Command\CreatePaymentCommand</item>
                <item name="moneiGetPayment" xsi:type="object">Monei\MoneiPayment\Command\GetPaymentCommand</item>
                <item name="moneiCancelPayment" xsi:type="object">Monei\MoneiPayment\Command\CancelPaymentCommand</item>
                <item name="moneiRefundPayment" xsi:type="object">Monei\MoneiPayment\Command\RefundPaymentCommand</item>
            </argument>
        </arguments>
    </type>
    <type name="Magento\Sales\Model\Service\CreditmemoService">
        <plugin name="set_order_status_after_refund" type="Monei\MoneiPayment\Plugin\SetOrderStatusAfterRefund"/>
    </type>
    <virtualType name="MoneiPaymentFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Monei\MoneiPayment\Model\Payment\Monei::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Monei\MoneiPayment\Block\Info\Monei</argument>
            <argument name="valueHandlerPool" xsi:type="object">Magento\Payment\Gateway\Config\ValueHandlerPool
            </argument>
            <argument name="commandPool" xsi:type="object">MoneiCommandPool</argument>
        </arguments>
    </virtualType>
    <type name="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">Magento\Payment\Gateway\Config\ConfigValueHandler</item>
            </argument>
        </arguments>
    </type>
    <type name="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Magento\Payment\Gateway\Config\Config</argument>
        </arguments>
    </type>
    <type name="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Monei\MoneiPayment\Model\Payment\Monei::CODE</argument>
        </arguments>
    </type>
    <virtualType name="MoneiCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="initialize" xsi:type="string">Magento\Payment\Gateway\Command\NullCommand</item>
                <item name="capture" xsi:type="string">Monei\MoneiPayment\Gateway\Command\Capture</item>
                <item name="refund" xsi:type="string">Monei\MoneiPayment\Gateway\Command\Refund</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- End monei payment configuration  -->

    <!-- Configuration for Monei Card payment -->
    <virtualType name="MoneiCardPaymentValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MoneiCardPaymentValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MoneiCardPaymentValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MoneiCardPaymentConfig</argument>
        </arguments>
    </virtualType>
    <virtualType name="MoneiCardPaymentConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Monei\MoneiPayment\Model\Payment\Monei::CARD_CODE</argument>
        </arguments>
    </virtualType>
    <virtualType name="MoneiCardPaymentFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Monei\MoneiPayment\Model\Payment\Monei::CARD_CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Monei\MoneiPayment\Block\Info\Monei</argument>
            <argument name="valueHandlerPool" xsi:type="object">MoneiCardPaymentValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MoneiCommandPool</argument>
        </arguments>
    </virtualType>
    <!-- End monei card payment configuration  -->

    <!-- Configuration for Monei Vault payment -->
    <virtualType name="MoneiVaultPaymentConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Monei\MoneiPayment\Model\Payment\Monei::CC_VAULT_CODE</argument>
        </arguments>
    </virtualType>
    <virtualType name="MoneiVaultPaymentValueHandler" type="VaultPaymentDefaultValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MoneiVaultPaymentConfig</argument>
        </arguments>
    </virtualType>
    <virtualType name="MoneiVaultPaymentValueHandlerPool" type="VaultPaymentValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MoneiVaultPaymentValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MoneiCardVaultFacade" type="Magento\Vault\Model\Method\Vault">
        <arguments>
            <argument name="config" xsi:type="object">MoneiVaultPaymentConfig</argument>
            <argument name="valueHandlerPool" xsi:type="object">MoneiVaultPaymentValueHandlerPool</argument>
            <argument name="vaultProvider" xsi:type="object">MoneiCardPaymentFacade</argument>
            <argument name="code" xsi:type="const">Monei\MoneiPayment\Model\Payment\Monei::CC_VAULT_CODE</argument>
        </arguments>
    </virtualType>
    <!-- End vault payment configuration  -->

    <!-- Configuration for Monei Bizum payment -->
    <virtualType name="MoneiBizumPaymentValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MoneiBizumPaymentValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MoneiBizumPaymentValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MoneiBizumPaymentConfig</argument>
        </arguments>
    </virtualType>
    <virtualType name="MoneiBizumPaymentConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Monei\MoneiPayment\Model\Payment\Monei::BIZUM_CODE</argument>
        </arguments>
    </virtualType>
    <virtualType name="MoneiBizumPaymentFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Monei\MoneiPayment\Model\Payment\Monei::BIZUM_CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Monei\MoneiPayment\Block\Info\Monei</argument>
            <argument name="valueHandlerPool" xsi:type="object">MoneiBizumPaymentValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MoneiCommandPool</argument>
        </arguments>
    </virtualType>
    <!-- End monei bizum payment configuration  -->

    <!-- Configuration for Monei Google and Apple payment -->
    <virtualType name="MoneiGoogleApplePaymentValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MoneiGoogleApplePaymentValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="MoneiGoogleApplePaymentValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">MoneiGoogleApplePaymentConfig</argument>
        </arguments>
    </virtualType>
    <virtualType name="MoneiGoogleApplePaymentConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Monei\MoneiPayment\Model\Payment\Monei::GOOGLE_APPLE_CODE</argument>
        </arguments>
    </virtualType>
    <virtualType name="MoneiGoogleApplePaymentFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Monei\MoneiPayment\Model\Payment\Monei::GOOGLE_APPLE_CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Monei\MoneiPayment\Block\Info\Monei</argument>
            <argument name="valueHandlerPool" xsi:type="object">MoneiGoogleApplePaymentValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">MoneiCommandPool</argument>
        </arguments>
    </virtualType>
    <!-- End Monei Google and Apple payment configuration  -->
</config>
